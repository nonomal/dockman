// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file git/v1/git.proto (package git.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file git/v1/git.proto.
 */
export const file_git_v1_git: GenFile = /*@__PURE__*/
  fileDesc("ChBnaXQvdjEvZ2l0LnByb3RvEgZnaXQudjEiFQoTTGlzdEJyYW5jaGVzUmVxdWVzdCIoChRMaXN0QnJhbmNoZXNSZXNwb25zZRIQCghicmFuY2hlcxgBIAMoCSInChVCcmFuY2hMaXN0RmlsZVJlcXVlc3QSDgoGYnJhbmNoGAEgASgJIicKFkJyYW5jaExpc3RGaWxlUmVzcG9uc2USDQoFZmlsZXMYASADKAkiLwoLRmlsZVJlcXVlc3QSDgoGYnJhbmNoGAEgASgJEhAKCGZpbGVwYXRoGAIgAygJIjoKC0NvbW1pdFF1ZXJ5EhoKBGZpbGUYASABKAsyDC5naXQudjEuRmlsZRIPCgdtZXNzYWdlGAIgASgJIi0KCkNvbW1pdExpc3QSHwoHY29tbWl0cxgBIAMoCzIOLmdpdC52MS5Db21taXQiVAoGQ29tbWl0EgwKBGhhc2gYASABKAkSDgoGYXV0aG9yGAIgASgJEg0KBWVtYWlsGAQgASgJEgwKBHdoZW4YBSABKAkSDwoHbWVzc2FnZRgGIAEoCSIUCgRGaWxlEgwKBG5hbWUYASABKAkiBwoFRW1wdHkyxQIKCkdpdFNlcnZpY2USMQoLTGlzdENvbW1pdHMSDC5naXQudjEuRmlsZRoSLmdpdC52MS5Db21taXRMaXN0IgASLgoGQ29tbWl0EhMuZ2l0LnYxLkNvbW1pdFF1ZXJ5Gg0uZ2l0LnYxLkVtcHR5IgASMAoIU3luY0ZpbGUSEy5naXQudjEuRmlsZVJlcXVlc3QaDS5naXQudjEuRW1wdHkiABJVChJMaXN0RmlsZUZyb21CcmFuY2gSHS5naXQudjEuQnJhbmNoTGlzdEZpbGVSZXF1ZXN0Gh4uZ2l0LnYxLkJyYW5jaExpc3RGaWxlUmVzcG9uc2UiABJLCgxMaXN0QnJhbmNoZXMSGy5naXQudjEuTGlzdEJyYW5jaGVzUmVxdWVzdBocLmdpdC52MS5MaXN0QnJhbmNoZXNSZXNwb25zZSIAQnoKCmNvbS5naXQudjFCCEdpdFByb3RvUAFaKWdpdGh1Yi5jb20vUkEzNDEvZG9ja21hbi9nZW5lcmF0ZWQvZ2l0L3YxogIDR1hYqgIGR2l0LlYxygIGR2l0XFYx4gISR2l0XFYxXEdQQk1ldGFkYXRh6gIHR2l0OjpWMWIGcHJvdG8z");

/**
 * @generated from message git.v1.ListBranchesRequest
 */
export type ListBranchesRequest = Message<"git.v1.ListBranchesRequest"> & {
};

/**
 * Describes the message git.v1.ListBranchesRequest.
 * Use `create(ListBranchesRequestSchema)` to create a new message.
 */
export const ListBranchesRequestSchema: GenMessage<ListBranchesRequest> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 0);

/**
 * @generated from message git.v1.ListBranchesResponse
 */
export type ListBranchesResponse = Message<"git.v1.ListBranchesResponse"> & {
  /**
   * @generated from field: repeated string branches = 1;
   */
  branches: string[];
};

/**
 * Describes the message git.v1.ListBranchesResponse.
 * Use `create(ListBranchesResponseSchema)` to create a new message.
 */
export const ListBranchesResponseSchema: GenMessage<ListBranchesResponse> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 1);

/**
 * @generated from message git.v1.BranchListFileRequest
 */
export type BranchListFileRequest = Message<"git.v1.BranchListFileRequest"> & {
  /**
   * @generated from field: string branch = 1;
   */
  branch: string;
};

/**
 * Describes the message git.v1.BranchListFileRequest.
 * Use `create(BranchListFileRequestSchema)` to create a new message.
 */
export const BranchListFileRequestSchema: GenMessage<BranchListFileRequest> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 2);

/**
 * @generated from message git.v1.BranchListFileResponse
 */
export type BranchListFileResponse = Message<"git.v1.BranchListFileResponse"> & {
  /**
   * @generated from field: repeated string files = 1;
   */
  files: string[];
};

/**
 * Describes the message git.v1.BranchListFileResponse.
 * Use `create(BranchListFileResponseSchema)` to create a new message.
 */
export const BranchListFileResponseSchema: GenMessage<BranchListFileResponse> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 3);

/**
 * @generated from message git.v1.FileRequest
 */
export type FileRequest = Message<"git.v1.FileRequest"> & {
  /**
   * @generated from field: string branch = 1;
   */
  branch: string;

  /**
   * @generated from field: repeated string filepath = 2;
   */
  filepath: string[];
};

/**
 * Describes the message git.v1.FileRequest.
 * Use `create(FileRequestSchema)` to create a new message.
 */
export const FileRequestSchema: GenMessage<FileRequest> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 4);

/**
 * @generated from message git.v1.CommitQuery
 */
export type CommitQuery = Message<"git.v1.CommitQuery"> & {
  /**
   * @generated from field: git.v1.File file = 1;
   */
  file?: File;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message git.v1.CommitQuery.
 * Use `create(CommitQuerySchema)` to create a new message.
 */
export const CommitQuerySchema: GenMessage<CommitQuery> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 5);

/**
 * @generated from message git.v1.CommitList
 */
export type CommitList = Message<"git.v1.CommitList"> & {
  /**
   * @generated from field: repeated git.v1.Commit commits = 1;
   */
  commits: Commit[];
};

/**
 * Describes the message git.v1.CommitList.
 * Use `create(CommitListSchema)` to create a new message.
 */
export const CommitListSchema: GenMessage<CommitList> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 6);

/**
 * @generated from message git.v1.Commit
 */
export type Commit = Message<"git.v1.Commit"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: string author = 2;
   */
  author: string;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: string when = 5;
   */
  when: string;

  /**
   * @generated from field: string message = 6;
   */
  message: string;
};

/**
 * Describes the message git.v1.Commit.
 * Use `create(CommitSchema)` to create a new message.
 */
export const CommitSchema: GenMessage<Commit> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 7);

/**
 * @generated from message git.v1.File
 */
export type File = Message<"git.v1.File"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message git.v1.File.
 * Use `create(FileSchema)` to create a new message.
 */
export const FileSchema: GenMessage<File> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 8);

/**
 * @generated from message git.v1.Empty
 */
export type Empty = Message<"git.v1.Empty"> & {
};

/**
 * Describes the message git.v1.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export const EmptySchema: GenMessage<Empty> = /*@__PURE__*/
  messageDesc(file_git_v1_git, 9);

/**
 * @generated from service git.v1.GitService
 */
export const GitService: GenService<{
  /**
   * @generated from rpc git.v1.GitService.ListCommits
   */
  listCommits: {
    methodKind: "unary";
    input: typeof FileSchema;
    output: typeof CommitListSchema;
  },
  /**
   * @generated from rpc git.v1.GitService.Commit
   */
  commit: {
    methodKind: "unary";
    input: typeof CommitQuerySchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc git.v1.GitService.SyncFile
   */
  syncFile: {
    methodKind: "unary";
    input: typeof FileRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc git.v1.GitService.ListFileFromBranch
   */
  listFileFromBranch: {
    methodKind: "unary";
    input: typeof BranchListFileRequestSchema;
    output: typeof BranchListFileResponseSchema;
  },
  /**
   * @generated from rpc git.v1.GitService.ListBranches
   */
  listBranches: {
    methodKind: "unary";
    input: typeof ListBranchesRequestSchema;
    output: typeof ListBranchesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_git_v1_git, 0);

