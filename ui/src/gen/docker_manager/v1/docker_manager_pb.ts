// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file docker_manager/v1/docker_manager.proto (package docker_manager.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file docker_manager/v1/docker_manager.proto.
 */
export const file_docker_manager_v1_docker_manager: GenFile = /*@__PURE__*/
  fileDesc("CiZkb2NrZXJfbWFuYWdlci92MS9kb2NrZXJfbWFuYWdlci5wcm90bxIRZG9ja2VyX21hbmFnZXIudjEiGgoKR2V0TWFjaGluZRIMCgRuYW1lGAEgASgJIi0KDVRvZ2dsZVJlcWV1c3QSDgoGZW5hYmxlGAEgASgIEgwKBG5hbWUYAiABKAkiPAoTTGlzdENsaWVudHNSZXNwb25zZRIUCgxhY3RpdmVDbGllbnQYASABKAkSDwoHY2xpZW50cxgCIAMoCSI7CgtMaXN0TWFjaGluZRIsCghtYWNoaW5lcxgCIAMoCzIaLmRvY2tlcl9tYW5hZ2VyLnYxLk1hY2hpbmUijAEKB01hY2hpbmUSCgoCaWQYASABKAQSDAoEbmFtZRgCIAEoCRIOCgZlbmFibGUYAyABKAgSDAoEaG9zdBgEIAEoCRIMCgRwb3J0GAUgASgFEgwKBHVzZXIYBiABKAkSEAoIcGFzc3dvcmQYByABKAkSGwoTdXNlX3B1YmxpY19rZXlfYXV0aBgIIAEoCCIiCg1Td2l0Y2hSZXF1ZXN0EhEKCW1hY2hpbmVJRBgBIAEoCSIHCgVFbXB0eTKqBQoURG9ja2VyTWFuYWdlclNlcnZpY2USQwoLU3RhcnRVcGRhdGUSGC5kb2NrZXJfbWFuYWdlci52MS5FbXB0eRoYLmRvY2tlcl9tYW5hZ2VyLnYxLkVtcHR5IgASTAoMU3dpdGNoQ2xpZW50EiAuZG9ja2VyX21hbmFnZXIudjEuU3dpdGNoUmVxdWVzdBoYLmRvY2tlcl9tYW5hZ2VyLnYxLkVtcHR5IgASUQoLTGlzdENsaWVudHMSGC5kb2NrZXJfbWFuYWdlci52MS5FbXB0eRomLmRvY2tlcl9tYW5hZ2VyLnYxLkxpc3RDbGllbnRzUmVzcG9uc2UiABJHCglMaXN0SG9zdHMSGC5kb2NrZXJfbWFuYWdlci52MS5FbXB0eRoeLmRvY2tlcl9tYW5hZ2VyLnYxLkxpc3RNYWNoaW5lIgASQgoDR2V0Eh0uZG9ja2VyX21hbmFnZXIudjEuR2V0TWFjaGluZRoaLmRvY2tlcl9tYW5hZ2VyLnYxLk1hY2hpbmUiABJDCglOZXdDbGllbnQSGi5kb2NrZXJfbWFuYWdlci52MS5NYWNoaW5lGhguZG9ja2VyX21hbmFnZXIudjEuRW1wdHkiABJECgpFZGl0Q2xpZW50EhouZG9ja2VyX21hbmFnZXIudjEuTWFjaGluZRoYLmRvY2tlcl9tYW5hZ2VyLnYxLkVtcHR5IgASRgoMRGVsZXRlQ2xpZW50EhouZG9ja2VyX21hbmFnZXIudjEuTWFjaGluZRoYLmRvY2tlcl9tYW5hZ2VyLnYxLkVtcHR5IgASTAoMVG9nZ2xlQ2xpZW50EiAuZG9ja2VyX21hbmFnZXIudjEuVG9nZ2xlUmVxZXVzdBoYLmRvY2tlcl9tYW5hZ2VyLnYxLkVtcHR5IgBCwgEKFWNvbS5kb2NrZXJfbWFuYWdlci52MUISRG9ja2VyTWFuYWdlclByb3RvUAFaNGdpdGh1Yi5jb20vUkEzNDEvZG9ja21hbi9nZW5lcmF0ZWQvZG9ja2VyX21hbmFnZXIvdjGiAgNEWFiqAhBEb2NrZXJNYW5hZ2VyLlYxygIQRG9ja2VyTWFuYWdlclxWMeICHERvY2tlck1hbmFnZXJcVjFcR1BCTWV0YWRhdGHqAhFEb2NrZXJNYW5hZ2VyOjpWMWIGcHJvdG8z");

/**
 * @generated from message docker_manager.v1.GetMachine
 */
export type GetMachine = Message<"docker_manager.v1.GetMachine"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message docker_manager.v1.GetMachine.
 * Use `create(GetMachineSchema)` to create a new message.
 */
export const GetMachineSchema: GenMessage<GetMachine> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 0);

/**
 * @generated from message docker_manager.v1.ToggleReqeust
 */
export type ToggleReqeust = Message<"docker_manager.v1.ToggleReqeust"> & {
  /**
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message docker_manager.v1.ToggleReqeust.
 * Use `create(ToggleReqeustSchema)` to create a new message.
 */
export const ToggleReqeustSchema: GenMessage<ToggleReqeust> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 1);

/**
 * @generated from message docker_manager.v1.ListClientsResponse
 */
export type ListClientsResponse = Message<"docker_manager.v1.ListClientsResponse"> & {
  /**
   * @generated from field: string activeClient = 1;
   */
  activeClient: string;

  /**
   * @generated from field: repeated string clients = 2;
   */
  clients: string[];
};

/**
 * Describes the message docker_manager.v1.ListClientsResponse.
 * Use `create(ListClientsResponseSchema)` to create a new message.
 */
export const ListClientsResponseSchema: GenMessage<ListClientsResponse> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 2);

/**
 * @generated from message docker_manager.v1.ListMachine
 */
export type ListMachine = Message<"docker_manager.v1.ListMachine"> & {
  /**
   * @generated from field: repeated docker_manager.v1.Machine machines = 2;
   */
  machines: Machine[];
};

/**
 * Describes the message docker_manager.v1.ListMachine.
 * Use `create(ListMachineSchema)` to create a new message.
 */
export const ListMachineSchema: GenMessage<ListMachine> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 3);

/**
 * @generated from message docker_manager.v1.Machine
 */
export type Machine = Message<"docker_manager.v1.Machine"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bool enable = 3;
   */
  enable: boolean;

  /**
   * @generated from field: string host = 4;
   */
  host: string;

  /**
   * @generated from field: int32 port = 5;
   */
  port: number;

  /**
   * @generated from field: string user = 6;
   */
  user: string;

  /**
   * @generated from field: string password = 7;
   */
  password: string;

  /**
   * @generated from field: bool use_public_key_auth = 8;
   */
  usePublicKeyAuth: boolean;
};

/**
 * Describes the message docker_manager.v1.Machine.
 * Use `create(MachineSchema)` to create a new message.
 */
export const MachineSchema: GenMessage<Machine> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 4);

/**
 * @generated from message docker_manager.v1.SwitchRequest
 */
export type SwitchRequest = Message<"docker_manager.v1.SwitchRequest"> & {
  /**
   * @generated from field: string machineID = 1;
   */
  machineID: string;
};

/**
 * Describes the message docker_manager.v1.SwitchRequest.
 * Use `create(SwitchRequestSchema)` to create a new message.
 */
export const SwitchRequestSchema: GenMessage<SwitchRequest> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 5);

/**
 * @generated from message docker_manager.v1.Empty
 */
export type Empty = Message<"docker_manager.v1.Empty"> & {
};

/**
 * Describes the message docker_manager.v1.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export const EmptySchema: GenMessage<Empty> = /*@__PURE__*/
  messageDesc(file_docker_manager_v1_docker_manager, 6);

/**
 * @generated from service docker_manager.v1.DockerManagerService
 */
export const DockerManagerService: GenService<{
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.StartUpdate
   */
  startUpdate: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.SwitchClient
   */
  switchClient: {
    methodKind: "unary";
    input: typeof SwitchRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.ListClients
   */
  listClients: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListClientsResponseSchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.ListHosts
   */
  listHosts: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListMachineSchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetMachineSchema;
    output: typeof MachineSchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.NewClient
   */
  newClient: {
    methodKind: "unary";
    input: typeof MachineSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.EditClient
   */
  editClient: {
    methodKind: "unary";
    input: typeof MachineSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.DeleteClient
   */
  deleteClient: {
    methodKind: "unary";
    input: typeof MachineSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc docker_manager.v1.DockerManagerService.ToggleClient
   */
  toggleClient: {
    methodKind: "unary";
    input: typeof ToggleReqeustSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_docker_manager_v1_docker_manager, 0);

