// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: docker_manager/v1/docker_manager.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMachine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMachine) Reset() {
	*x = GetMachine{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachine) ProtoMessage() {}

func (x *GetMachine) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachine.ProtoReflect.Descriptor instead.
func (*GetMachine) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{0}
}

func (x *GetMachine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ToggleReqeust struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleReqeust) Reset() {
	*x = ToggleReqeust{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleReqeust) ProtoMessage() {}

func (x *ToggleReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleReqeust.ProtoReflect.Descriptor instead.
func (*ToggleReqeust) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ToggleReqeust) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ToggleReqeust) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListClientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveClient  string                 `protobuf:"bytes,1,opt,name=activeClient,proto3" json:"activeClient,omitempty"`
	Clients       []string               `protobuf:"bytes,2,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClientsResponse) Reset() {
	*x = ListClientsResponse{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsResponse) ProtoMessage() {}

func (x *ListClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsResponse.ProtoReflect.Descriptor instead.
func (*ListClientsResponse) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ListClientsResponse) GetActiveClient() string {
	if x != nil {
		return x.ActiveClient
	}
	return ""
}

func (x *ListClientsResponse) GetClients() []string {
	if x != nil {
		return x.Clients
	}
	return nil
}

type ListMachine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Machines      []*Machine             `protobuf:"bytes,2,rep,name=machines,proto3" json:"machines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachine) Reset() {
	*x = ListMachine{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachine) ProtoMessage() {}

func (x *ListMachine) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachine.ProtoReflect.Descriptor instead.
func (*ListMachine) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ListMachine) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Machine struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Enable           bool                   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	Host             string                 `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port             int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	User             string                 `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Password         string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	UsePublicKeyAuth bool                   `protobuf:"varint,8,opt,name=use_public_key_auth,json=usePublicKeyAuth,proto3" json:"use_public_key_auth,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{4}
}

func (x *Machine) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Machine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Machine) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Machine) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Machine) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Machine) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Machine) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Machine) GetUsePublicKeyAuth() bool {
	if x != nil {
		return x.UsePublicKeyAuth
	}
	return false
}

type SwitchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineID     string                 `protobuf:"bytes,1,opt,name=machineID,proto3" json:"machineID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchRequest) Reset() {
	*x = SwitchRequest{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchRequest) ProtoMessage() {}

func (x *SwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchRequest.ProtoReflect.Descriptor instead.
func (*SwitchRequest) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{5}
}

func (x *SwitchRequest) GetMachineID() string {
	if x != nil {
		return x.MachineID
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_docker_manager_v1_docker_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_docker_manager_v1_docker_manager_proto_rawDescGZIP(), []int{6}
}

var File_docker_manager_v1_docker_manager_proto protoreflect.FileDescriptor

const file_docker_manager_v1_docker_manager_proto_rawDesc = "" +
	"\n" +
	"&docker_manager/v1/docker_manager.proto\x12\x11docker_manager.v1\" \n" +
	"\n" +
	"GetMachine\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\";\n" +
	"\rToggleReqeust\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"S\n" +
	"\x13ListClientsResponse\x12\"\n" +
	"\factiveClient\x18\x01 \x01(\tR\factiveClient\x12\x18\n" +
	"\aclients\x18\x02 \x03(\tR\aclients\"E\n" +
	"\vListMachine\x126\n" +
	"\bmachines\x18\x02 \x03(\v2\x1a.docker_manager.v1.MachineR\bmachines\"\xcc\x01\n" +
	"\aMachine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06enable\x18\x03 \x01(\bR\x06enable\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12\x12\n" +
	"\x04user\x18\x06 \x01(\tR\x04user\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\x12-\n" +
	"\x13use_public_key_auth\x18\b \x01(\bR\x10usePublicKeyAuth\"-\n" +
	"\rSwitchRequest\x12\x1c\n" +
	"\tmachineID\x18\x01 \x01(\tR\tmachineID\"\a\n" +
	"\x05Empty2\xaa\x05\n" +
	"\x14DockerManagerService\x12C\n" +
	"\vStartUpdate\x12\x18.docker_manager.v1.Empty\x1a\x18.docker_manager.v1.Empty\"\x00\x12L\n" +
	"\fSwitchClient\x12 .docker_manager.v1.SwitchRequest\x1a\x18.docker_manager.v1.Empty\"\x00\x12Q\n" +
	"\vListClients\x12\x18.docker_manager.v1.Empty\x1a&.docker_manager.v1.ListClientsResponse\"\x00\x12G\n" +
	"\tListHosts\x12\x18.docker_manager.v1.Empty\x1a\x1e.docker_manager.v1.ListMachine\"\x00\x12B\n" +
	"\x03Get\x12\x1d.docker_manager.v1.GetMachine\x1a\x1a.docker_manager.v1.Machine\"\x00\x12C\n" +
	"\tNewClient\x12\x1a.docker_manager.v1.Machine\x1a\x18.docker_manager.v1.Empty\"\x00\x12D\n" +
	"\n" +
	"EditClient\x12\x1a.docker_manager.v1.Machine\x1a\x18.docker_manager.v1.Empty\"\x00\x12F\n" +
	"\fDeleteClient\x12\x1a.docker_manager.v1.Machine\x1a\x18.docker_manager.v1.Empty\"\x00\x12L\n" +
	"\fToggleClient\x12 .docker_manager.v1.ToggleReqeust\x1a\x18.docker_manager.v1.Empty\"\x00B\xc2\x01\n" +
	"\x15com.docker_manager.v1B\x12DockerManagerProtoP\x01Z4github.com/RA341/dockman/generated/docker_manager/v1\xa2\x02\x03DXX\xaa\x02\x10DockerManager.V1\xca\x02\x10DockerManager\\V1\xe2\x02\x1cDockerManager\\V1\\GPBMetadata\xea\x02\x11DockerManager::V1b\x06proto3"

var (
	file_docker_manager_v1_docker_manager_proto_rawDescOnce sync.Once
	file_docker_manager_v1_docker_manager_proto_rawDescData []byte
)

func file_docker_manager_v1_docker_manager_proto_rawDescGZIP() []byte {
	file_docker_manager_v1_docker_manager_proto_rawDescOnce.Do(func() {
		file_docker_manager_v1_docker_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_docker_manager_v1_docker_manager_proto_rawDesc), len(file_docker_manager_v1_docker_manager_proto_rawDesc)))
	})
	return file_docker_manager_v1_docker_manager_proto_rawDescData
}

var file_docker_manager_v1_docker_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_docker_manager_v1_docker_manager_proto_goTypes = []any{
	(*GetMachine)(nil),          // 0: docker_manager.v1.GetMachine
	(*ToggleReqeust)(nil),       // 1: docker_manager.v1.ToggleReqeust
	(*ListClientsResponse)(nil), // 2: docker_manager.v1.ListClientsResponse
	(*ListMachine)(nil),         // 3: docker_manager.v1.ListMachine
	(*Machine)(nil),             // 4: docker_manager.v1.Machine
	(*SwitchRequest)(nil),       // 5: docker_manager.v1.SwitchRequest
	(*Empty)(nil),               // 6: docker_manager.v1.Empty
}
var file_docker_manager_v1_docker_manager_proto_depIdxs = []int32{
	4,  // 0: docker_manager.v1.ListMachine.machines:type_name -> docker_manager.v1.Machine
	6,  // 1: docker_manager.v1.DockerManagerService.StartUpdate:input_type -> docker_manager.v1.Empty
	5,  // 2: docker_manager.v1.DockerManagerService.SwitchClient:input_type -> docker_manager.v1.SwitchRequest
	6,  // 3: docker_manager.v1.DockerManagerService.ListClients:input_type -> docker_manager.v1.Empty
	6,  // 4: docker_manager.v1.DockerManagerService.ListHosts:input_type -> docker_manager.v1.Empty
	0,  // 5: docker_manager.v1.DockerManagerService.Get:input_type -> docker_manager.v1.GetMachine
	4,  // 6: docker_manager.v1.DockerManagerService.NewClient:input_type -> docker_manager.v1.Machine
	4,  // 7: docker_manager.v1.DockerManagerService.EditClient:input_type -> docker_manager.v1.Machine
	4,  // 8: docker_manager.v1.DockerManagerService.DeleteClient:input_type -> docker_manager.v1.Machine
	1,  // 9: docker_manager.v1.DockerManagerService.ToggleClient:input_type -> docker_manager.v1.ToggleReqeust
	6,  // 10: docker_manager.v1.DockerManagerService.StartUpdate:output_type -> docker_manager.v1.Empty
	6,  // 11: docker_manager.v1.DockerManagerService.SwitchClient:output_type -> docker_manager.v1.Empty
	2,  // 12: docker_manager.v1.DockerManagerService.ListClients:output_type -> docker_manager.v1.ListClientsResponse
	3,  // 13: docker_manager.v1.DockerManagerService.ListHosts:output_type -> docker_manager.v1.ListMachine
	4,  // 14: docker_manager.v1.DockerManagerService.Get:output_type -> docker_manager.v1.Machine
	6,  // 15: docker_manager.v1.DockerManagerService.NewClient:output_type -> docker_manager.v1.Empty
	6,  // 16: docker_manager.v1.DockerManagerService.EditClient:output_type -> docker_manager.v1.Empty
	6,  // 17: docker_manager.v1.DockerManagerService.DeleteClient:output_type -> docker_manager.v1.Empty
	6,  // 18: docker_manager.v1.DockerManagerService.ToggleClient:output_type -> docker_manager.v1.Empty
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_docker_manager_v1_docker_manager_proto_init() }
func file_docker_manager_v1_docker_manager_proto_init() {
	if File_docker_manager_v1_docker_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_docker_manager_v1_docker_manager_proto_rawDesc), len(file_docker_manager_v1_docker_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_docker_manager_v1_docker_manager_proto_goTypes,
		DependencyIndexes: file_docker_manager_v1_docker_manager_proto_depIdxs,
		MessageInfos:      file_docker_manager_v1_docker_manager_proto_msgTypes,
	}.Build()
	File_docker_manager_v1_docker_manager_proto = out.File
	file_docker_manager_v1_docker_manager_proto_goTypes = nil
	file_docker_manager_v1_docker_manager_proto_depIdxs = nil
}
