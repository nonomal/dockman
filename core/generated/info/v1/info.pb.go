// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: info/v1/info.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadVersionRequest) Reset() {
	*x = ReadVersionRequest{}
	mi := &file_info_v1_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVersionRequest) ProtoMessage() {}

func (x *ReadVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_v1_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVersionRequest.ProtoReflect.Descriptor instead.
func (*ReadVersionRequest) Descriptor() ([]byte, []int) {
	return file_info_v1_info_proto_rawDescGZIP(), []int{0}
}

func (x *ReadVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type AppInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Flavour       string                 `protobuf:"bytes,2,opt,name=flavour,proto3" json:"flavour,omitempty"`
	Commit        string                 `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	BuildDate     string                 `protobuf:"bytes,4,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	Branch        string                 `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	mi := &file_info_v1_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_info_v1_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_info_v1_info_proto_rawDescGZIP(), []int{1}
}

func (x *AppInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppInfo) GetFlavour() string {
	if x != nil {
		return x.Flavour
	}
	return ""
}

func (x *AppInfo) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *AppInfo) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *AppInfo) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type Changelog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Changelog     string                 `protobuf:"bytes,3,opt,name=changelog,proto3" json:"changelog,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Changelog) Reset() {
	*x = Changelog{}
	mi := &file_info_v1_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Changelog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changelog) ProtoMessage() {}

func (x *Changelog) ProtoReflect() protoreflect.Message {
	mi := &file_info_v1_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changelog.ProtoReflect.Descriptor instead.
func (*Changelog) Descriptor() ([]byte, []int) {
	return file_info_v1_info_proto_rawDescGZIP(), []int{2}
}

func (x *Changelog) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Changelog) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Changelog) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_info_v1_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_info_v1_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_info_v1_info_proto_rawDescGZIP(), []int{3}
}

var File_info_v1_info_proto protoreflect.FileDescriptor

const file_info_v1_info_proto_rawDesc = "" +
	"\n" +
	"\x12info/v1/info.proto\x12\ainfo.v1\".\n" +
	"\x12ReadVersionRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x8b\x01\n" +
	"\aAppInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x18\n" +
	"\aflavour\x18\x02 \x01(\tR\aflavour\x12\x16\n" +
	"\x06commit\x18\x03 \x01(\tR\x06commit\x12\x1c\n" +
	"\tbuildDate\x18\x04 \x01(\tR\tbuildDate\x12\x16\n" +
	"\x06branch\x18\x05 \x01(\tR\x06branch\"U\n" +
	"\tChangelog\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1c\n" +
	"\tchangelog\x18\x03 \x01(\tR\tchangelog\"\a\n" +
	"\x05Empty2\xad\x01\n" +
	"\vInfoService\x122\n" +
	"\fGetChangelog\x12\x0e.info.v1.Empty\x1a\x12.info.v1.Changelog\x12.\n" +
	"\n" +
	"GetAppInfo\x12\x0e.info.v1.Empty\x1a\x10.info.v1.AppInfo\x12:\n" +
	"\vReadVersion\x12\x1b.info.v1.ReadVersionRequest\x1a\x0e.info.v1.EmptyB\x81\x01\n" +
	"\vcom.info.v1B\tInfoProtoP\x01Z*github.com/RA341/dockman/generated/info/v1\xa2\x02\x03IXX\xaa\x02\aInfo.V1\xca\x02\aInfo\\V1\xe2\x02\x13Info\\V1\\GPBMetadata\xea\x02\bInfo::V1b\x06proto3"

var (
	file_info_v1_info_proto_rawDescOnce sync.Once
	file_info_v1_info_proto_rawDescData []byte
)

func file_info_v1_info_proto_rawDescGZIP() []byte {
	file_info_v1_info_proto_rawDescOnce.Do(func() {
		file_info_v1_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_info_v1_info_proto_rawDesc), len(file_info_v1_info_proto_rawDesc)))
	})
	return file_info_v1_info_proto_rawDescData
}

var file_info_v1_info_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_info_v1_info_proto_goTypes = []any{
	(*ReadVersionRequest)(nil), // 0: info.v1.ReadVersionRequest
	(*AppInfo)(nil),            // 1: info.v1.AppInfo
	(*Changelog)(nil),          // 2: info.v1.Changelog
	(*Empty)(nil),              // 3: info.v1.Empty
}
var file_info_v1_info_proto_depIdxs = []int32{
	3, // 0: info.v1.InfoService.GetChangelog:input_type -> info.v1.Empty
	3, // 1: info.v1.InfoService.GetAppInfo:input_type -> info.v1.Empty
	0, // 2: info.v1.InfoService.ReadVersion:input_type -> info.v1.ReadVersionRequest
	2, // 3: info.v1.InfoService.GetChangelog:output_type -> info.v1.Changelog
	1, // 4: info.v1.InfoService.GetAppInfo:output_type -> info.v1.AppInfo
	3, // 5: info.v1.InfoService.ReadVersion:output_type -> info.v1.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_info_v1_info_proto_init() }
func file_info_v1_info_proto_init() {
	if File_info_v1_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_info_v1_info_proto_rawDesc), len(file_info_v1_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_v1_info_proto_goTypes,
		DependencyIndexes: file_info_v1_info_proto_depIdxs,
		MessageInfos:      file_info_v1_info_proto_msgTypes,
	}.Build()
	File_info_v1_info_proto = out.File
	file_info_v1_info_proto_goTypes = nil
	file_info_v1_info_proto_depIdxs = nil
}
