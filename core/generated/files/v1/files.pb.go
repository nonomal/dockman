// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: files/v1/files.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FormatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatRequest) Reset() {
	*x = FormatRequest{}
	mi := &file_files_v1_files_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatRequest) ProtoMessage() {}

func (x *FormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatRequest.ProtoReflect.Descriptor instead.
func (*FormatRequest) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{0}
}

func (x *FormatRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type FormatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      string                 `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatResponse) Reset() {
	*x = FormatResponse{}
	mi := &file_files_v1_files_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatResponse) ProtoMessage() {}

func (x *FormatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatResponse.ProtoReflect.Descriptor instead.
func (*FormatResponse) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{1}
}

func (x *FormatResponse) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*FileGroup           `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_files_v1_files_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{2}
}

func (x *ListResponse) GetGroups() []*FileGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type FileGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Root          string                 `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	SubFiles      []string               `protobuf:"bytes,2,rep,name=subFiles,proto3" json:"subFiles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileGroup) Reset() {
	*x = FileGroup{}
	mi := &file_files_v1_files_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGroup) ProtoMessage() {}

func (x *FileGroup) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGroup.ProtoReflect.Descriptor instead.
func (*FileGroup) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{3}
}

func (x *FileGroup) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *FileGroup) GetSubFiles() []string {
	if x != nil {
		return x.SubFiles
	}
	return nil
}

type RenameFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldFilePath   string                 `protobuf:"bytes,1,opt,name=oldFilePath,proto3" json:"oldFilePath,omitempty"`
	NewFilePath   string                 `protobuf:"bytes,2,opt,name=newFilePath,proto3" json:"newFilePath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameFile) Reset() {
	*x = RenameFile{}
	mi := &file_files_v1_files_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFile) ProtoMessage() {}

func (x *RenameFile) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFile.ProtoReflect.Descriptor instead.
func (*RenameFile) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{4}
}

func (x *RenameFile) GetOldFilePath() string {
	if x != nil {
		return x.OldFilePath
	}
	return ""
}

func (x *RenameFile) GetNewFilePath() string {
	if x != nil {
		return x.NewFilePath
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_files_v1_files_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_files_v1_files_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{6}
}

type DockmanYaml struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	UseComposeFolders          bool                   `protobuf:"varint,1,opt,name=useComposeFolders,proto3" json:"useComposeFolders,omitempty"`
	DisableComposeQuickActions bool                   `protobuf:"varint,7,opt,name=disableComposeQuickActions,proto3" json:"disableComposeQuickActions,omitempty"`
	TabLimit                   int32                  `protobuf:"varint,6,opt,name=tabLimit,proto3" json:"tabLimit,omitempty"`
	VolumesPage                *VolumesConfig         `protobuf:"bytes,2,opt,name=volumesPage,proto3" json:"volumesPage,omitempty"`
	NetworkPage                *NetworkConfig         `protobuf:"bytes,3,opt,name=networkPage,proto3" json:"networkPage,omitempty"`
	ImagePage                  *ImageConfig           `protobuf:"bytes,4,opt,name=imagePage,proto3" json:"imagePage,omitempty"`
	ContainerPage              *ContainerConfig       `protobuf:"bytes,5,opt,name=containerPage,proto3" json:"containerPage,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DockmanYaml) Reset() {
	*x = DockmanYaml{}
	mi := &file_files_v1_files_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockmanYaml) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockmanYaml) ProtoMessage() {}

func (x *DockmanYaml) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockmanYaml.ProtoReflect.Descriptor instead.
func (*DockmanYaml) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{7}
}

func (x *DockmanYaml) GetUseComposeFolders() bool {
	if x != nil {
		return x.UseComposeFolders
	}
	return false
}

func (x *DockmanYaml) GetDisableComposeQuickActions() bool {
	if x != nil {
		return x.DisableComposeQuickActions
	}
	return false
}

func (x *DockmanYaml) GetTabLimit() int32 {
	if x != nil {
		return x.TabLimit
	}
	return 0
}

func (x *DockmanYaml) GetVolumesPage() *VolumesConfig {
	if x != nil {
		return x.VolumesPage
	}
	return nil
}

func (x *DockmanYaml) GetNetworkPage() *NetworkConfig {
	if x != nil {
		return x.NetworkPage
	}
	return nil
}

func (x *DockmanYaml) GetImagePage() *ImageConfig {
	if x != nil {
		return x.ImagePage
	}
	return nil
}

func (x *DockmanYaml) GetContainerPage() *ContainerConfig {
	if x != nil {
		return x.ContainerPage
	}
	return nil
}

type VolumesConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sort          *Sort                  `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumesConfig) Reset() {
	*x = VolumesConfig{}
	mi := &file_files_v1_files_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumesConfig) ProtoMessage() {}

func (x *VolumesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumesConfig.ProtoReflect.Descriptor instead.
func (*VolumesConfig) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{8}
}

func (x *VolumesConfig) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type NetworkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sort          *Sort                  `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_files_v1_files_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkConfig) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ImageConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sort          *Sort                  `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageConfig) Reset() {
	*x = ImageConfig{}
	mi := &file_files_v1_files_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageConfig) ProtoMessage() {}

func (x *ImageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageConfig.ProtoReflect.Descriptor instead.
func (*ImageConfig) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{10}
}

func (x *ImageConfig) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ContainerConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sort          *Sort                  `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	mi := &file_files_v1_files_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{11}
}

func (x *ContainerConfig) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type Sort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SortOrder     string                 `protobuf:"bytes,1,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	SortField     string                 `protobuf:"bytes,2,opt,name=sortField,proto3" json:"sortField,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sort) Reset() {
	*x = Sort{}
	mi := &file_files_v1_files_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_files_v1_files_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_files_v1_files_proto_rawDescGZIP(), []int{12}
}

func (x *Sort) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

func (x *Sort) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

var File_files_v1_files_proto protoreflect.FileDescriptor

const file_files_v1_files_proto_rawDesc = "" +
	"\n" +
	"\x14files/v1/files.proto\x12\bfiles.v1\"+\n" +
	"\rFormatRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\",\n" +
	"\x0eFormatResponse\x12\x1a\n" +
	"\bcontents\x18\x01 \x01(\tR\bcontents\";\n" +
	"\fListResponse\x12+\n" +
	"\x06groups\x18\x01 \x03(\v2\x13.files.v1.FileGroupR\x06groups\";\n" +
	"\tFileGroup\x12\x12\n" +
	"\x04root\x18\x01 \x01(\tR\x04root\x12\x1a\n" +
	"\bsubFiles\x18\x02 \x03(\tR\bsubFiles\"P\n" +
	"\n" +
	"RenameFile\x12 \n" +
	"\voldFilePath\x18\x01 \x01(\tR\voldFilePath\x12 \n" +
	"\vnewFilePath\x18\x02 \x01(\tR\vnewFilePath\"\"\n" +
	"\x04File\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"\a\n" +
	"\x05Empty\"\x83\x03\n" +
	"\vDockmanYaml\x12,\n" +
	"\x11useComposeFolders\x18\x01 \x01(\bR\x11useComposeFolders\x12>\n" +
	"\x1adisableComposeQuickActions\x18\a \x01(\bR\x1adisableComposeQuickActions\x12\x1a\n" +
	"\btabLimit\x18\x06 \x01(\x05R\btabLimit\x129\n" +
	"\vvolumesPage\x18\x02 \x01(\v2\x17.files.v1.VolumesConfigR\vvolumesPage\x129\n" +
	"\vnetworkPage\x18\x03 \x01(\v2\x17.files.v1.NetworkConfigR\vnetworkPage\x123\n" +
	"\timagePage\x18\x04 \x01(\v2\x15.files.v1.ImageConfigR\timagePage\x12?\n" +
	"\rcontainerPage\x18\x05 \x01(\v2\x19.files.v1.ContainerConfigR\rcontainerPage\"3\n" +
	"\rVolumesConfig\x12\"\n" +
	"\x04sort\x18\x01 \x01(\v2\x0e.files.v1.SortR\x04sort\"3\n" +
	"\rNetworkConfig\x12\"\n" +
	"\x04sort\x18\x01 \x01(\v2\x0e.files.v1.SortR\x04sort\"1\n" +
	"\vImageConfig\x12\"\n" +
	"\x04sort\x18\x01 \x01(\v2\x0e.files.v1.SortR\x04sort\"5\n" +
	"\x0fContainerConfig\x12\"\n" +
	"\x04sort\x18\x01 \x01(\v2\x0e.files.v1.SortR\x04sort\"B\n" +
	"\x04Sort\x12\x1c\n" +
	"\tsortOrder\x18\x01 \x01(\tR\tsortOrder\x12\x1c\n" +
	"\tsortField\x18\x02 \x01(\tR\tsortField2\xf5\x02\n" +
	"\vFileService\x12+\n" +
	"\x06Create\x12\x0e.files.v1.File\x1a\x0f.files.v1.Empty\"\x00\x121\n" +
	"\x04List\x12\x0f.files.v1.Empty\x1a\x16.files.v1.ListResponse\"\x00\x12+\n" +
	"\x06Delete\x12\x0e.files.v1.File\x1a\x0f.files.v1.Empty\"\x00\x12+\n" +
	"\x06Exists\x12\x0e.files.v1.File\x1a\x0f.files.v1.Empty\"\x00\x121\n" +
	"\x06Rename\x12\x14.files.v1.RenameFile\x1a\x0f.files.v1.Empty\"\x00\x12:\n" +
	"\x0eGetDockmanYaml\x12\x0f.files.v1.Empty\x1a\x15.files.v1.DockmanYaml\"\x00\x12=\n" +
	"\x06Format\x12\x17.files.v1.FormatRequest\x1a\x18.files.v1.FormatResponse\"\x00B\x88\x01\n" +
	"\fcom.files.v1B\n" +
	"FilesProtoP\x01Z+github.com/RA341/dockman/generated/files/v1\xa2\x02\x03FXX\xaa\x02\bFiles.V1\xca\x02\bFiles\\V1\xe2\x02\x14Files\\V1\\GPBMetadata\xea\x02\tFiles::V1b\x06proto3"

var (
	file_files_v1_files_proto_rawDescOnce sync.Once
	file_files_v1_files_proto_rawDescData []byte
)

func file_files_v1_files_proto_rawDescGZIP() []byte {
	file_files_v1_files_proto_rawDescOnce.Do(func() {
		file_files_v1_files_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_files_v1_files_proto_rawDesc), len(file_files_v1_files_proto_rawDesc)))
	})
	return file_files_v1_files_proto_rawDescData
}

var file_files_v1_files_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_files_v1_files_proto_goTypes = []any{
	(*FormatRequest)(nil),   // 0: files.v1.FormatRequest
	(*FormatResponse)(nil),  // 1: files.v1.FormatResponse
	(*ListResponse)(nil),    // 2: files.v1.ListResponse
	(*FileGroup)(nil),       // 3: files.v1.FileGroup
	(*RenameFile)(nil),      // 4: files.v1.RenameFile
	(*File)(nil),            // 5: files.v1.File
	(*Empty)(nil),           // 6: files.v1.Empty
	(*DockmanYaml)(nil),     // 7: files.v1.DockmanYaml
	(*VolumesConfig)(nil),   // 8: files.v1.VolumesConfig
	(*NetworkConfig)(nil),   // 9: files.v1.NetworkConfig
	(*ImageConfig)(nil),     // 10: files.v1.ImageConfig
	(*ContainerConfig)(nil), // 11: files.v1.ContainerConfig
	(*Sort)(nil),            // 12: files.v1.Sort
}
var file_files_v1_files_proto_depIdxs = []int32{
	3,  // 0: files.v1.ListResponse.groups:type_name -> files.v1.FileGroup
	8,  // 1: files.v1.DockmanYaml.volumesPage:type_name -> files.v1.VolumesConfig
	9,  // 2: files.v1.DockmanYaml.networkPage:type_name -> files.v1.NetworkConfig
	10, // 3: files.v1.DockmanYaml.imagePage:type_name -> files.v1.ImageConfig
	11, // 4: files.v1.DockmanYaml.containerPage:type_name -> files.v1.ContainerConfig
	12, // 5: files.v1.VolumesConfig.sort:type_name -> files.v1.Sort
	12, // 6: files.v1.NetworkConfig.sort:type_name -> files.v1.Sort
	12, // 7: files.v1.ImageConfig.sort:type_name -> files.v1.Sort
	12, // 8: files.v1.ContainerConfig.sort:type_name -> files.v1.Sort
	5,  // 9: files.v1.FileService.Create:input_type -> files.v1.File
	6,  // 10: files.v1.FileService.List:input_type -> files.v1.Empty
	5,  // 11: files.v1.FileService.Delete:input_type -> files.v1.File
	5,  // 12: files.v1.FileService.Exists:input_type -> files.v1.File
	4,  // 13: files.v1.FileService.Rename:input_type -> files.v1.RenameFile
	6,  // 14: files.v1.FileService.GetDockmanYaml:input_type -> files.v1.Empty
	0,  // 15: files.v1.FileService.Format:input_type -> files.v1.FormatRequest
	6,  // 16: files.v1.FileService.Create:output_type -> files.v1.Empty
	2,  // 17: files.v1.FileService.List:output_type -> files.v1.ListResponse
	6,  // 18: files.v1.FileService.Delete:output_type -> files.v1.Empty
	6,  // 19: files.v1.FileService.Exists:output_type -> files.v1.Empty
	6,  // 20: files.v1.FileService.Rename:output_type -> files.v1.Empty
	7,  // 21: files.v1.FileService.GetDockmanYaml:output_type -> files.v1.DockmanYaml
	1,  // 22: files.v1.FileService.Format:output_type -> files.v1.FormatResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_files_v1_files_proto_init() }
func file_files_v1_files_proto_init() {
	if File_files_v1_files_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_files_v1_files_proto_rawDesc), len(file_files_v1_files_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_files_v1_files_proto_goTypes,
		DependencyIndexes: file_files_v1_files_proto_depIdxs,
		MessageInfos:      file_files_v1_files_proto_msgTypes,
	}.Build()
	File_files_v1_files_proto = out.File
	file_files_v1_files_proto_goTypes = nil
	file_files_v1_files_proto_depIdxs = nil
}
